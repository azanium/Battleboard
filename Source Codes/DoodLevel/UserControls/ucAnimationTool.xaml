<!-- if designer throw exceptions, comment 3 lines deep down below (marked with TODO EXCEPTION comment) -->

<UserControl x:Class="DoodleLand.UserControls.ucAnimationTool"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:xd="clr-namespace:DevComponents.WpfDock;assembly=DevComponents.WpfDock"
             xmlns:xr="clr-namespace:DevComponents.WpfRibbon;assembly=DevComponents.WpfRibbon"
             xmlns:xe="clr-namespace:DevComponents.WpfEditors;assembly=DevComponents.WpfEditors"
             xmlns:controller="clr-namespace:DoodleLand.Controllers"
             xmlns:converters="clr-namespace:DoodleLand.Converters"
             xmlns:controls="clr-namespace:DoodleLand.UserControls"
             xmlns:local="clr-namespace:DoodleLand"
             IsEnabled="{Binding Path=IsReady, Mode=OneWay}" >

    <UserControl.Resources>
        <converters:KeyframeDilateConverter x:Key="keyframeDilateConverter"/>
        <converters:DoubleToStringConverter x:Key="doubleToStringConverter"/>

    </UserControl.Resources>

    <Grid x:Name="rootContainer">
        <StackPanel Margin="2" x:Name="containerPanel">

            <!-- top position, info & settings for animation -->
            <WrapPanel IsEnabled="{Binding Path=IsNotPlaying, Mode=OneWay}" Margin="2" Orientation="Horizontal">

                <Border Padding="3" Margin="2" BorderBrush="Gray" BorderThickness="0.2" CornerRadius="1">
                    <DockPanel>
                        <Label Content="Keyframe:" VerticalAlignment="Center" Padding="0" Foreground="{Binding ElementName=recordKeyframe, Path=Foreground}"/>
                        <Label Content="{Binding ElementName=keyframeSlider, Path=Value, Mode=OneWay, Converter={StaticResource doubleToStringConverter}}" 
                                Margin="2,0,2,0" VerticalAlignment="Center" Padding="0" Foreground="{Binding ElementName=recordKeyframe, Path=Foreground}"/>
                    </DockPanel>
                </Border>

                <Border Padding="3" Margin="2" BorderBrush="Gray" BorderThickness="0.2" CornerRadius="1">
                    <DockPanel>
                        <xr:ButtonDropDown xr:Ribbon.KeyTip="X" Padding="0 1 0 0" Margin=" 0 0 2 0" 
                                           >
                            <xr:ButtonDropDown.Image>
                                <Image Source="/Icons/Cut.png" Width="16" Height="16" Margin="0 0 2 0"/>
                            </xr:ButtonDropDown.Image>
                        </xr:ButtonDropDown>

                        <xr:ButtonDropDown xr:Ribbon.KeyTip="C" Padding="0 1 0 0" Margin="0 0 2 0" >
                            <xr:ButtonDropDown.Image>
                                <Image Source="/Icons/Copy.png" Width="16" Height="16" Margin="0 0 2 0"/>
                            </xr:ButtonDropDown.Image>
                        </xr:ButtonDropDown>

                        <xr:ButtonDropDown ImagePosition="Left" xr:Ribbon.KeyTip="V" VerticalAlignment="Top" Margin="2 0 0 0"
                                           >
                            <xr:ButtonDropDown.Image>
                                <Image Source="/Icons/Paste32.png" Width="16" Height="16" />
                            </xr:ButtonDropDown.Image>
                        </xr:ButtonDropDown>

                        <CheckBox Content="Interpolate" IsChecked="{Binding Path=IsInterpolate, Mode=TwoWay}" Margin="5,0,5,0" VerticalAlignment="Center" Foreground="{Binding ElementName=recordKeyframe, Path=Foreground}">
                            <CheckBox.ToolTip>
                                <xr:SuperToolTip Header="Interpolate">
                                    <TextBlock TextWrapping="Wrap" Width="180">
                                Interpolate the keyframe when sliding the keyframe slider.
                                    </TextBlock>
                                </xr:SuperToolTip>
                            </CheckBox.ToolTip>
                        </CheckBox>
                    </DockPanel>
                </Border>

                <Border Padding="3" Margin="2" BorderBrush="Gray" BorderThickness="0.2" CornerRadius="1">
                    <DockPanel>
                        <Label Content="Dilate Factor:" VerticalAlignment="Center" Padding="0" Foreground="{Binding ElementName=recordKeyframe, Path=Foreground}"/>
                        <xe:DoubleInput Name="multiplier" Value="{Binding Path=ActiveSpirit.ActiveBehavior.TimeDilateFactor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             MinValue="0" MaxValue="100" Width="50" HorizontalAlignment="Left" Increment="0.1"
                             Margin="2,0,5,0" VerticalAlignment="Center" ValueChanged="multiplier_ValueChanged">
                            <xe:DoubleInput.ToolTip>
                                <xr:SuperToolTip Header="Time Multiplier">
                                    <TextBlock TextWrapping="Wrap" Width="250">
                                Increase / Decrease all the animation keyframes times by this multiplier value
                                <LineBreak/><LineBreak/>
                                To increase the time speed, change the multiplier into greater than 1, eg: 1.5x, 2x, etc.
                                <LineBreak/>
                                To decrease the time speed, change the multiplier into less than 1, eg: 0.5x, 0.25x, etc.
                                    </TextBlock>
                                </xr:SuperToolTip>
                            </xe:DoubleInput.ToolTip>
                        </xe:DoubleInput>
                    </DockPanel>
                </Border>

                <!--<Label Content="Intervals(ms):" VerticalAlignment="Center" Padding="0" 
                       Foreground="{Binding ElementName=recordKeyframe, Path=Foreground}"/>
                <xe:IntegerInput Name="intervalTime" Width="50" MaxValue="1000" MinValue="1"
                                 Value="{Binding Path=Intervals, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 HorizontalAlignment="Left" Margin="2,0,5,0" VerticalAlignment="Center" />-->

                <Border Padding="3" Margin="2" BorderBrush="Gray" BorderThickness="0.2" CornerRadius="1">
                    <DockPanel>
                        <Label Content="Max Time Line:" VerticalAlignment="Center" Padding="0" Foreground="{Binding ElementName=recordKeyframe, Path=Foreground}"/>
                        <xe:DoubleInput Name="keyTime" Value="{Binding Path=ActiveSpirit.ActiveBehavior.MaxTimeLine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             MinValue="1" MaxValue="100000" Width="50" HorizontalAlignment="Left" 
                             Margin="2,0,5,0" VerticalAlignment="Center">
                            <xe:DoubleInput.ToolTip>
                                <xr:SuperToolTip Header="Maximum Time Line" Width="180">
                                    <TextBlock TextWrapping="Wrap" >
                                Set the maximum time lines for the keyframes.
                                    </TextBlock>
                                </xr:SuperToolTip>
                            </xe:DoubleInput.ToolTip>
                        </xe:DoubleInput>
                    </DockPanel>
                </Border>

                <Border Padding="3" Margin="2" BorderBrush="Gray" BorderThickness="0.2" CornerRadius="1">
                    <DockPanel>
                        <Label Content="Advance By: " Margin="2,2,2,2" Padding="0" Foreground="{Binding ElementName=recordKeyframe, Path=Foreground}"/>
                        <xe:DoubleInput Name="advanceBy" DisplayFormat="F3" Increment="0.001"
							 MinValue="{Binding Path=MinAdvanceBy, Mode=OneWay}"
							 MaxValue="{Binding Path=ActiveSpirit.ActiveBehavior.MaxTimeLine, Mode=OneWay}"							 
                             Value="{Binding Path=AdvanceBy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Width="50" HorizontalAlignment="Left" VerticalAlignment="Center" >
                            <xe:DoubleInput.ToolTip>
                                <xr:SuperToolTip Header="Auto Advance">
                                    <TextBlock TextWrapping="Wrap" Width="180">
                            Auto Advance the keyframe slider each time Record button clicked.
                                    </TextBlock>
                                </xr:SuperToolTip>
                            </xe:DoubleInput.ToolTip>
                        </xe:DoubleInput>
                    </DockPanel>
                </Border>

                <Border Padding="3" Margin="2" BorderBrush="Gray" BorderThickness="0.2" CornerRadius="1">
                    <DockPanel>
                        <CheckBox Content="AutoKey Recording" IsChecked="{Binding Path=IsAutoKey, Mode=TwoWay}" 
                      Margin="5,0,5,0" VerticalAlignment="Center" Foreground="{Binding ElementName=recordKeyframe, Path=Foreground}">
                            <CheckBox.ToolTip>
                                <xr:SuperToolTip Header="AutoKey Recording">
                                    <TextBlock TextWrapping="Wrap" Width="180">
                            Auto record the changes in the selected creature's pose without having to hit record button all the time.
                                    </TextBlock>
                                </xr:SuperToolTip>
                            </CheckBox.ToolTip>
                        </CheckBox>
                    </DockPanel>
                </Border>

            </WrapPanel>

            <!-- middle position, animation slider-->
            <DockPanel FlowDirection="LeftToRight">
                <Label Content="{Binding Path=MinTimeLine, Mode=OneWay}" Margin="2,0,2,0" Padding="0" Foreground="{Binding ElementName=recordKeyframe, Path=Foreground}"/>
                <Label Content="{Binding Path=ActiveSpirit.ActiveBehavior.MaxTimeLine, Mode=OneWay}" DockPanel.Dock="Right" Padding="0" Foreground="{Binding ElementName=recordKeyframe, Path=Foreground}"/>

                <StackPanel >

                    <Slider Name="keyframeSlider" Value="{Binding Path=ActiveSpirit.CurrentTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            ValueChanged="keyframeSlider_ValueChanged"
                            Orientation="Horizontal" HorizontalAlignment="Stretch" 
                            Minimum="{Binding Path=MinTimeLine, Mode=OneWay}"
                            Maximum="{Binding ElementName=keyTime, Path=Value}" TickPlacement="BottomRight" 
                            AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="2" SmallChange="0.1" LargeChange="1" TickFrequency="0.1" />
                </StackPanel>
            </DockPanel>

            <!-- bottom position, buttons for recording, behaviour, etc -->
            <WrapPanel Orientation="Horizontal">

                <!-- play buttons -->
                <xr:GroupPanel Margin="5 6 4 2">
                    <xr:ButtonDropDown Header="Play" Name="playKeyframe" Padding="2">
                        <xr:ButtonDropDown.Image>
                            <Image Source="/Icons/Play1Normal.png" Width="16" Height="16"/>
                        </xr:ButtonDropDown.Image>
                        <xr:ButtonDropDown.ToolTip>
                            <xr:SuperToolTip Header="Play Animation Timeline (Ctrl + Enter)">
                                <TextBlock TextWrapping="Wrap" Width="180">
                                Play the current animation timeline. If keyframe less than 2, it will not play the animation.
                                </TextBlock>
                            </xr:SuperToolTip>
                        </xr:ButtonDropDown.ToolTip>
                    </xr:ButtonDropDown>

                    <xr:ButtonDropDown Header="Pause" Padding="2">
                        <xr:ButtonDropDown.Image>
                            <Image Source="/Icons/PauseNormalRed.png" Width="16" Height="16"/>
                        </xr:ButtonDropDown.Image>
                    </xr:ButtonDropDown>


                    <xr:ButtonDropDown Header="Pause" Padding="2">
                        <xr:ButtonDropDown.Image>
                            <Image Source="/Icons/Stop1NormalRed.png" Width="16" Height="16"/>
                        </xr:ButtonDropDown.Image>
                    </xr:ButtonDropDown>
                </xr:GroupPanel>




                <!-- keyframes -->
                <xr:GroupPanel Margin="4 6 4 2">

                    <xr:ButtonDropDown Margin="0,0,4,0" Header="Record" Name="recordKeyframe" Padding="2" >
                        <xr:ButtonDropDown.Image>
                            <Image Source="/Icons/RecordNormal.png" Width="16" Height="16"/>
                        </xr:ButtonDropDown.Image>
                        <xr:ButtonDropDown.ToolTip>
                            <xr:SuperToolTip Header="Record Current Timeframe (R)">
                                <TextBlock TextWrapping="Wrap" Width="180">
                                Record current timeframe as a new Keyframe.
                                <LineBreak/><LineBreak/>
                                Change the <Bold>Advance By</Bold> value to auto advance each time this button clicked.
                                </TextBlock>
                            </xr:SuperToolTip>
                        </xr:ButtonDropDown.ToolTip>
                    </xr:ButtonDropDown>

                    <Label VerticalAlignment="Center" Content="Keyframe :" Padding="3"
                           Foreground="{Binding ElementName=btnRemove, Path=Foreground}"/>
                    <ComboBox IsEnabled="{Binding Path=IsNotPlaying}" x:Name="cbxKeyframes" Width="100" Padding="2" VerticalAlignment="Center" 
                              SelectedIndex="{Binding Path=SelectedKeyframeIndex, Mode=TwoWay}"
                              ItemsSource="{Binding Path=ActiveSpirit.ActiveBehavior.Keyframes, UpdateSourceTrigger=PropertyChanged}"
                              IsSynchronizedWithCurrentItem="True" SelectionChanged="cbxKeyframes_SelectionChanged">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <Binding Path="Time" Converter="{StaticResource keyframeDilateConverter}" /> 
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>






                    <xr:ButtonDropDown x:Name="btnRemove" Header="Remove" Padding="3">
                        <xr:ButtonDropDown.ToolTip>
                            <xr:SuperToolTip Header="Remove Selected Keyframe">
                                <TextBlock TextWrapping="Wrap" Width="180">
                                Remove selected keyframe.
                                </TextBlock>
                            </xr:SuperToolTip>
                        </xr:ButtonDropDown.ToolTip>
                    </xr:ButtonDropDown>

                    <xr:ButtonDropDown Header="Remove All" Padding="3">
                        <xr:ButtonDropDown.ToolTip>
                            <xr:SuperToolTip Header="Remove All Keyframe">
                                <TextBlock TextWrapping="Wrap" Width="180">
                                Remove all keyframes, hence clear current Behavior from any keyframes.
                                </TextBlock>
                            </xr:SuperToolTip>
                        </xr:ButtonDropDown.ToolTip>
                    </xr:ButtonDropDown>
                </xr:GroupPanel>

                <!-- behaviours -->
                <xr:GroupPanel Margin="4 6 4 2" >
                    <Label Content="Behavior :" VerticalAlignment="Center" Padding="3" Foreground="{Binding ElementName=btnRemove, Path=Foreground}"/>
                    <ComboBox IsEditable="{Binding Path=IsBehaviorEditable}" IsEnabled="{Binding Path=IsNotPlaying}" x:Name="cbxBehavior" Width="150" 
                        Padding="2" VerticalAlignment="Center" 
                        SelectedItem="{Binding Path=ActiveSpirit.ActiveBehavior, Mode=TwoWay}" Text="{Binding Path=BehaviorName}" Margin="2,0,2,0"
                        ItemsSource="{Binding Path=ActiveSpirit.Behaviors, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                        DisplayMemberPath="Name" IsSynchronizedWithCurrentItem="True" KeyDown="cbxBehavior_KeyDown"
                    />
                    <CheckBox Content="First Time" IsChecked="{Binding Path=IsFirstTimeBehaviour, Mode=TwoWay}" 
                        Margin="5 0 10 0" VerticalAlignment="Center" Foreground="{Binding ElementName=newBehavior, Path=Foreground}"
                        IsEnabled="{Binding Path=IsFirstTimeBehaviourEnabled, Mode=OneWay}" >
                        <CheckBox.ToolTip>
                            <xr:SuperToolTip Header="First Time Behaviour">
                                <TextBlock TextWrapping="Wrap" Width="180">
                                    When two or more behaviors have the same key assigned, the one marked First Time will be 
                                    executed first when key is pressed. The other non first-time will execute second.
                                </TextBlock>
                            </xr:SuperToolTip>
                        </CheckBox.ToolTip>
                    </CheckBox>

                    <xr:ButtonDropDown x:Name="newBehavior" Header="New" Padding="3">
                        <xr:ButtonDropDown.ToolTip>
                            <xr:SuperToolTip Header="Add New Behavior">
                                <TextBlock TextWrapping="Wrap" Width="180">
                                Add a new behavior.
                                </TextBlock>
                            </xr:SuperToolTip>
                        </xr:ButtonDropDown.ToolTip>
                    </xr:ButtonDropDown>

                    <xr:ButtonDropDown Header="Clone" Padding="3">
                        <xr:ButtonDropDown.ToolTip>
                            <xr:SuperToolTip Header="Clone Current Behavior">
                                <TextBlock TextWrapping="Wrap" Width="180">
                                Clone current behavior to a new one.
                                </TextBlock>
                            </xr:SuperToolTip>
                        </xr:ButtonDropDown.ToolTip>
                    </xr:ButtonDropDown>

                    <xr:ButtonDropDown Header="Mirror" Padding="3">
                        <xr:ButtonDropDown.ToolTip>
                            <xr:SuperToolTip Header="Mirror Current Behavior">
                                <TextBlock TextWrapping="Wrap" Width="180">
                                Create a mirror of current behavior. Make sure to mark left-right joint
                                pair using the same LimbSection number, to automatically swap them upon mirroring.
                                </TextBlock>
                            </xr:SuperToolTip>
                        </xr:ButtonDropDown.ToolTip>
                    </xr:ButtonDropDown>

                    <xr:ButtonDropDown Header="Remove" Padding="3" >
                        <xr:ButtonDropDown.ToolTip>
                            <xr:SuperToolTip Header="Remove Current Behavior">
                                <TextBlock TextWrapping="Wrap" Width="180">
                                Remove current behavior.
                                </TextBlock>
                            </xr:SuperToolTip>
                        </xr:ButtonDropDown.ToolTip>
                    </xr:ButtonDropDown>

                    <xr:ButtonDropDown Header="Remove All" Padding="3" >
                        <xr:ButtonDropDown.ToolTip>
                            <xr:SuperToolTip Header="Remove All Behavior">
                                <TextBlock TextWrapping="Wrap" Width="180">
                                Remove all behaviors, hence clear current Spirit from any behaviors.
                                </TextBlock>
                            </xr:SuperToolTip>
                        </xr:ButtonDropDown.ToolTip>
                    </xr:ButtonDropDown>
                </xr:GroupPanel>

                <!-- keyboard assignment -->
                <xr:GroupPanel Margin="4 6 4 2" >
                    <Label Content="Key button :" VerticalAlignment="Center" Padding="3" 
                        Foreground="{Binding ElementName=btnRemove, Path=Foreground}"/>
                    <ComboBox x:Name="cbxKeys" IsEnabled="{Binding Path=IsBehaviorEditable}"
                        Padding="2" VerticalAlignment="Center" Width="70" Margin="2,0,2,0"
                        SelectedItem="{Binding Path=KeyIndex, Mode=TwoWay}" />
                    <xr:ButtonDropDown Header="Edit" Padding="3" >
                        <xr:ButtonDropDown.ToolTip>
                            <xr:SuperToolTip Header="Edit Behavior Key">
                                <TextBlock TextWrapping="Wrap" Width="180">
                                Edit keyboard shortcut key for current behavior.
                                </TextBlock>
                            </xr:SuperToolTip>
                        </xr:ButtonDropDown.ToolTip>
                    </xr:ButtonDropDown>
                </xr:GroupPanel>

                <!-- misc -->
                <xr:GroupPanel Margin="4 6 4 2">
                    <xr:ButtonDropDown Header="Reset Pose" Padding="3"  />
                </xr:GroupPanel>

            </WrapPanel>

        </StackPanel>

        <Canvas x:Name="adornerLayer" VerticalAlignment="Top" Visibility="Collapsed">
            <TextBlock Text="DragDropHintText" FontFamily="Arial Narrow" FontSize="14" Foreground="Blue" x:Name="adorner"/>
        </Canvas>
    </Grid>
</UserControl>
